package be.fp.distriWebApp.core.model.eo;
// Generated by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@Entity
@Table(name = "distributeur", catalog = "distriwebapp")

public class Distributeur implements java.io.Serializable {

	public static final String ID = "id";
	public static final String REFLOVS = "refLovs";
	public static final String COCKTAILENCOURS = "cocktailEnCours";
	public static final String NUMERO = "numero";
	public static final String INTITULE = "intitule";
	public static final String DESCRIPTION = "description";
	public static final String IPADRESSE = "ipAdresse";
	public static final String PORTATMEGA = "portAtmega";
	public static final String DISTRICOKTAILTODOS = "districoktailtodos";
	public static final String POMPES = "pompes";
	public static final String DISTRICOKTAILDISPOS = "districoktaildispos";

	@Id

	@Column(name = "id", unique = true, nullable = false)

	private Integer id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_cocktail_en_cours")
	private Cocktail cocktailEnCours;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "etat_lovs")
	private RefLovs etat_lovs;

	@Column(name = "numero", nullable = false)

	private int numero;

	@Column(name = "intitule")

	private String intitule;

	@Column(name = "description")

	private String description;

	@Column(name = "ipAdresse", length = 50)

	private String ipAdresse;

	@Column(name = "portAtmega", nullable = false)

	private int portAtmega;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributeur")

	private Set<Districoktailtodo> districoktailtodos = new HashSet<Districoktailtodo>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributeur")

	private Set<Pompe> pompes = new HashSet<Pompe>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributeur")

	private Set<Districoktaildispo> districoktaildispos = new HashSet<Districoktaildispo>(0);

	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Cocktail getCocktailEnCours() {
		return cocktailEnCours;
	}

	public void setCocktailEnCours(Cocktail cocktailEnCours) {
		this.cocktailEnCours = cocktailEnCours;
	}
	

	public RefLovs getEtat_lovs() {
		return etat_lovs;
	}

	public void setEtat_lovs(RefLovs etat_lovs) {
		this.etat_lovs = etat_lovs;
	}

	public int getNumero() {
		return numero;
	}

	public void setNumero(int numero) {
		this.numero = numero;
	}

	public String getIntitule() {
		return intitule;
	}

	public void setIntitule(String intitule) {
		this.intitule = intitule;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getIpAdresse() {
		return ipAdresse;
	}

	public void setIpAdresse(String ipAdresse) {
		this.ipAdresse = ipAdresse;
	}

	public int getPortAtmega() {
		return portAtmega;
	}

	public void setPortAtmega(int portAtmega) {
		this.portAtmega = portAtmega;
	}

	public Set<Districoktailtodo> getDistricoktailtodos() {
		return districoktailtodos;
	}

	public void setDistricoktailtodos(Set<Districoktailtodo> districoktailtodos) {
		this.districoktailtodos = districoktailtodos;
	}

	public Set<Pompe> getPompes() {
		return pompes;
	}

	public void setPompes(Set<Pompe> pompes) {
		this.pompes = pompes;
	}

	public Set<Districoktaildispo> getDistricoktaildispos() {
		return districoktaildispos;
	}

	public void setDistricoktaildispos(Set<Districoktaildispo> districoktaildispos) {
		this.districoktaildispos = districoktaildispos;
	}
	
	/**
	* toString
	* @return String
	*/
	public String toString() {
		return new ToStringBuilder(this).append("\n").append("id", id).append("\n").toString();
	}

	public boolean equals(Object obj) {
		if (obj instanceof Distributeur == false) {
			return false;
		}
		if (this == obj) {
			return true;
		}
		Distributeur rhs = (Distributeur) obj;
		return new EqualsBuilder().append("id", rhs.id).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder(17, 37).append(id).toHashCode();
	}

}
